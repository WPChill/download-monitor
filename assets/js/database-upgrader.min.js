(t=>{var r={counts:0,upgraderResumeOffset:0,completed:0,ajaxRequests:[],ajaxStarted:1,ajaxTimeout:null,ajax:ajaxurl,entries:0,requestsNumber:0,init:function(){t(document).on("click","button#dlm-upgrade-db,a.dlm-db-upgrade-link",function(e){e.preventDefault(),t(this).prop("disabled",!0),t("body").find(".dlm-upgrade-db-notice").addClass("started");e={url:r.ajax,type:"post",async:!0,cache:!1,dataType:"json",data:{action:"dlm_db_log_entries",nonce:dlm_upgrader.nonce},success:function(e){"0"!==e&&"0"!==e.entries?(r.entries=e.entries,0!==parseInt(e.offset)&&(r.upgraderResumeOffset=parseInt(e.offset),e={url:r.ajax,type:"post",async:!0,cache:!1,dataType:"json",data:{action:"dlm_upgrade_db_clear_offset",nonce:dlm_upgrader.nonce,offset:parseInt(e.offset)},success:function(){console.log("previous offset cleared")}},t.ajax(e))):r.entries=0,r.processAjax(),s.init(Math.ceil(1e6*r.upgraderResumeOffset/r.entries))}};t.ajax(e)}),t(document).on("click","button#dlm-upgrade-download_category,a.dlm-download_category-upgrade-link",function(e){e.preventDefault(),t(this).prop("disabled",!0);let a=t("body").find(".dlm-upgrade-db-notice");a.find("p.dlm-upgrade-notice").remove(),a.append('<p class="dlm-upgrade-notice">'+dlm_upgraderColumn.upgrade_download_category+"</p>");e={url:ajaxurl,type:"post",async:!0,cache:!1,dataType:"json",data:{action:"dlm_update_download_category",nonce:dlm_upgraderColumn.nonce},success:function(e){"undefined"!==e.data&&(a.find("p.dlm-upgrade-notice").remove(),a.append("<p>"+e.data.message+"</p>")),setTimeout(function(){window.location.reload()},3500)}};t.ajax(e)})},processAjax:function(){if(0<r.entries-1e4*r.upgraderResumeOffset){r.requestsNumber=1e4<=r.entries?parseInt(Math.ceil(r.entries/1e4)):1;for(let e=0;e<=r.requestsNumber-r.upgraderResumeOffset;e++){var a={url:r.ajax,type:"post",async:!0,cache:!1,dataType:"json",data:{action:"dlm_upgrade_db",nonce:dlm_upgrader.nonce,offset:r.counts+r.upgraderResumeOffset},success:function(){r.ajaxStarted=r.ajaxStarted-1,r.completed=r.completed+1,s.progressHandler(100*(r.completed+r.upgraderResumeOffset)/r.requestsNumber)}};r.counts+=1,r.ajaxRequests.push(a)}}var e={url:r.ajax,type:"post",async:!0,cache:!1,dataType:"json",data:{action:"dlm_alter_download_log",nonce:dlm_upgrader.nonce},success:function(){r.ajaxStarted=r.ajaxStarted-1,r.completed=r.completed+1,0<r.entries?s.progressHandler(100*(r.completed+r.upgraderResumeOffset)/r.requestsNumber):s.progressHandler(100*(r.completed+r.upgraderResumeOffset)),jQuery("#dlm_progress-bar").parent().find(".dlm-progress-label").text("Upgrade completed!"),jQuery("#dlm_progress-bar").addClass("completed")}};r.ajaxRequests.push(e),r.runAjaxs()},runAjaxs:function(){for(var e;r.ajaxStarted<2&&0<r.ajaxRequests.length;)r.ajaxStarted=r.ajaxStarted+1,e=r.ajaxRequests.shift(),t.ajax(e);0<r.ajaxRequests.length&&(r.ajaxTimeout=setTimeout(function(){console.log("Delayed 1s"),r.runAjaxs()},1e3))}};let s={el:{},label:{},init:(e=0)=>{s.el=jQuery("#dlm_progress-bar"),s.label=jQuery("#dlm_progress-bar").parent().find(".dlm-progress-label"),s.label.text(Math.ceil(e)+"%"),s.el.progressbar({value:e,change:()=>{s.label.text(s.el.progressbar("value")+"%")},complete:()=>{}})},progressHandler:e=>{s.el.progressbar("value",Math.ceil(e))}};t(document).ready(function(){r.init()})})(jQuery);